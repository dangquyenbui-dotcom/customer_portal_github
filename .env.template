# customer_portal/.env.template

# Flask Configuration
SECRET_KEY=generate_a_strong_random_secret_key_here
SESSION_HOURS=8
# APP_BASE_URL=http://your-production-domain.com # Optional: Base URL for email links, defaults to localhost

# Customer Portal Database (Local SQL Server) - Stores customer accounts, sessions, audit
DB_SERVER=your_sql_server.database.windows.net
DB_NAME=CustomerPortalDB
DB_USE_WINDOWS_AUTH=False # Set to True if using Windows Authentication
DB_USERNAME=YourPortalDbUser
DB_PASSWORD=YourPortalDbPassword

# ERP Database (Deacom - Read Only) - Source for inventory data
ERP_DB_SERVER=your_deacom_sql_server.database.windows.net
ERP_DB_NAME=YourDeacomDbName
ERP_DB_USERNAME=YourDeacomReadOnlyUser
ERP_DB_PASSWORD=YourDeacomReadOnlyPassword
ERP_DB_PORT=1433
ERP_DB_DRIVER=ODBC Driver 17 for SQL Server # Verify this matches your server's driver
ERP_DB_TIMEOUT=30

# Email Configuration (Required for Password Reset Feature)
SMTP_SERVER=smtp.office365.com
SMTP_PORT=587
SMTP_USE_TLS=True
SMTP_USERNAME=your_email@wepackitall.com
SMTP_PASSWORD=your_email_password
EMAIL_FROM=your_email@wepackitall.com # Email address the password reset emails will come from
EMAIL_BCC=it@wepackitall.com # BCC address for all sent emails

# Admin User Configuration (For accessing /admin section of Customer Portal)
ADMIN_USERNAME=cp_admin
ADMIN_PASSWORD_HASH=generate_this_hash_separately # e.g., using: python -c "from werkzeug.security import generate_password_hash; print(generate_password_hash('your_chosen_password'))"
